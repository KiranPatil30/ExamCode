input:
3
100 10 50
200 5 30
150 8 40

sample output:
Sorted prices: 200 150 100
Total Price: 3080.00

Product Delivery and Profit Calculation

import java.util.Scanner;
import java.util.List;
import java.util.ArrayList;
import java.util.Collections;

public class Main {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);
        
        // Read number of products
        int n = scanner.nextInt();
        
        // Create list to store products
        List<Product> products = new ArrayList<>();
        
        // Read product data
        for (int i = 0; i < n; i++) {
            int price = scanner.nextInt();
            int quantity = scanner.nextInt();
            int deliveryCost = scanner.nextInt();
            products.add(new Product(price, quantity, deliveryCost));
        }
        
        // Sort products by price in descending order
        Collections.sort(products, (p1, p2) -> p2.price - p1.price);
        
        // Calculate total profit and prepare sorted prices string
        double totalProfit = 0;
        StringBuilder sortedPrices = new StringBuilder();
        
        for (Product p : products) {
            totalProfit += (p.price * p.quantity) - p.deliveryCost;
            sortedPrices.append(p.price).append(" ");
        }
        
        // Remove trailing space
        if (sortedPrices.length() > 0) {
            sortedPrices.setLength(sortedPrices.length() - 1);
        }
        
        // Print results
        System.out.println("Sorted prices: " + sortedPrices.toString());
        System.out.printf("Total profit: %.2f", totalProfit);
    }
    
    static class Product {
        int price;
        int quantity;
        int deliveryCost;
        
        public Product(int price, int quantity, int deliveryCost) {
            this.price = price;
            this.quantity = quantity;
            this.deliveryCost = deliveryCost;
        }
    }
}
