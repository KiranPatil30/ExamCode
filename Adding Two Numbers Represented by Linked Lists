
class ListNode:
    def __init__(self, val=0, next=None):
        self.val = val
        self.next = next

def addTwoNumbers(l1: ListNode, l2: ListNode) -> ListNode:
    dummy = ListNode()
    current = dummy
    carry = 0
    
    while l1 or l2 or carry:
        val1 = l1.val if l1 else 0
        val2 = l2.val if l2 else 0
        
        total = val1 + val2 + carry
        carry = total // 10
        digit = total % 10
        
        current.next = ListNode(digit)
        current = current.next
        
        l1 = l1.next if l1 else None
        l2 = l2.next if l2 else None
    
    return dummy.next

def listToLinkedList(lst):
    dummy = ListNode()
    current = dummy
    for num in lst:
        current.next = ListNode(num)
        current = current.next
    return dummy.next

def printLinkedList(l):
    result = []
    while l:
        result.append(l.val)
        l = l.next
    print(result)

def inputLinkedList():
    nums = list(map(int, input().split()))
    return listToLinkedList(nums)

if __name__ == "__main__":
    print("Enter first number digits (space separated, reverse order):")
    l1 = inputLinkedList()
    print("Enter second number digits (space separated, reverse order):")
    l2 = inputLinkedList()
    
    res = addTwoNumbers(l1, l2)
    print("Output:", end=" ")
    printLinkedList(res)
